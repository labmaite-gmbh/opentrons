# This workflow runs tests and lint on pull requests that touch the api/
# project or its CI configuration.

name: 'API test/lint/deploy'

on:
  # Most of the time, we run on pull requests, which lets us handle external PRs
  pull_request:
    paths:
      - 'api/**/*'
      - 'Makefile'
      - 'shared-data/**/*'
      - '!shared-data/js/**'
      - 'hardware/**/*'
      - 'scripts/**/*.mk'
      - 'scripts/**/*.py'
      - '.github/workflows/api-test-lint-deploy.yaml'
      - '.github/actions/python/**/*'
      - '.github/workflows/utils.js'
  push:
    paths:
      - 'api/**'
      - 'Makefile'
      - 'shared-data/**/*'
      - '!shared-data/js/**/*'
      - 'hardware/**/*'
      - 'scripts/**/*.mk'
      - 'scripts/**/*.py'
      - '.github/workflows/api-test-lint-deploy.yaml'
      - '.github/actions/python/**/*'
      - '.github/workflows/utils.js'
    branches:
      - 'edge'
      - 'release'
      - '*hotfix*'
    tags:
      - 'v*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ github.ref_name != 'edge' || github.run_id}}-${{ github.ref_type != 'tag' || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: 'opentrons package linting'
    timeout-minutes: 20
    runs-on: 'ubuntu-22.04'
    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'actions/setup-node@v3'
        with:
          node-version: '14'
      - name: setup python
        uses: './.github/actions/python/setup-all'
      - name: Lint
        run: make -C api lint
  test:
    name: 'opentrons package tests on ${{ matrix.os }}'
    timeout-minutes: 30
    needs: [lint]
    strategy:
      matrix:
        os: ['windows-2019', 'ubuntu-22.04', 'macos-latest']
    runs-on: '${{ matrix.os }}'
    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'actions/setup-node@v3'
        with:
          node-version: '14'

      - name: 'set complex environment variables'
        uses: actions/github-script@v6.1.1
        with:
          script: |
            const { buildComplexEnvVars, } = require(`${process.env.GITHUB_WORKSPACE}/.github/workflows/utils.js`)
            buildComplexEnvVars(core, context)
      - name: setup python Windows
        if: matrix.os == 'windows-2019'
        uses: './.github/actions/python/setup-app'
      - name: setup python not Windows
        if: matrix.os != 'windows-2019'
        uses: './.github/actions/python/setup-all'
      - name: Test without opentrons_hardware
        if: matrix.os != 'windows-2019'
        run: make -C api test-ot2
      - name: Test with opentrons_hardware
        if: matrix.os != 'windows-2019'
        run: make -C api test-cov
      - name: Test app
        run: make -C api test-app
      - name: Ensure assets build
        if: matrix.os != 'windows-2019'
        run: make -C api sdist wheel
      - name: pip install opentrons and use CLI
        working-directory: api
        run: |
          python -m pip install .
          opentrons_execute --help
          opentrons_simulate --help
          opentrons_simulate ./docs/v2/example_protocols/dilution_tutorial.py -e -o nothing
          python -m opentrons.cli --help
      - name: Upload coverage report
        if: matrix.os != 'windows-2019'
        uses: 'codecov/codecov-action@v3'
        with:
          files: ./api/coverage.xml
          flags: api

  deploy:
    name: 'deploy opentrons package'
    needs: [test]
    runs-on: 'ubuntu-22.04'
    if: github.event_name == 'push'
    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'actions/setup-node@v3'
        with:
          node-version: '14'
      - name: 'set complex environment variables'
        uses: actions/github-script@v6.1.1
        with:
          script: |
            const { buildComplexEnvVars, } = require(`${process.env.GITHUB_WORKSPACE}/.github/workflows/utils.js`)
            buildComplexEnvVars(core, context)
      - name: setup python
        uses: './.github/actions/python/setup-all'
      # creds and repository configuration for deploying python wheels
      - if: ${{ !env.OT_TAG }}
        name: 'upload to test pypi'
        uses: './.github/actions/python/pypi-deploy'
        with:
          project: 'api'
          repository_url: 'https://test.pypi.org/legacy/'
          password: '${{ secrets.OT_TEST_PYPI_PASSWORD }}'
      - if: startsWith(env.OT_TAG, 'v')
        name: 'upload to real pypi'
        uses: './.github/actions/python/pypi-deploy'
        with:
          project: 'api'
          repository_url: 'https://upload.pypi.org/legacy/'
          password: '${{ secrets.OT_PYPI_PASSWORD }}'
